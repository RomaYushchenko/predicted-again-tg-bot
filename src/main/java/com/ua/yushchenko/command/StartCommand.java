package com.ua.yushchenko.command;

import java.time.LocalDateTime;

import com.ua.yushchenko.builder.ui.main.MainMenuButtonBuilder;
import com.ua.yushchenko.service.mainmenubutton.MainMenuButtonService;
import com.ua.yushchenko.service.notification.NotificationSchedulerService;
import com.ua.yushchenko.service.telegram.MessageSender;
import com.ua.yushchenko.service.user.UserService;
import org.quartz.SchedulerException;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

/**
 * Command for handling start menu requests.
 *
 * @author AI
 * @version 0.1-beta
 */
public class StartCommand extends AbstractMessageCommand {

    private final NotificationSchedulerService notificationSchedulerService;
    private final UserService userService;
    private final MainMenuButtonBuilder mainMenuButtonBuilder;
    private final MainMenuButtonService mainMenuButtonService;

    protected StartCommand(final MessageSender messageSender,
                           final long chatId,
                           final NotificationSchedulerService notificationSchedulerService,
                           final UserService userService,
                           final MainMenuButtonBuilder mainMenuButtonBuilder,
                           final MainMenuButtonService mainMenuButtonService) {
        super(messageSender, chatId);
        this.notificationSchedulerService = notificationSchedulerService;
        this.userService = userService;
        this.mainMenuButtonBuilder = mainMenuButtonBuilder;
        this.mainMenuButtonService = mainMenuButtonService;
    }

    @Override
    public void execute(Update update) throws TelegramApiException, SchedulerException {
        final LocalDateTime notificationTime = LocalDateTime.now()
                                                            .withHour(9)
                                                            .withMinute(0)
                                                            .withSecond(0)
                                                            .withNano(0);

        userService.saveNotificationTime(chatId, notificationTime);
        notificationSchedulerService.scheduleDailyNotification(chatId, notificationTime);

        String welcomeMessage = """
                üëã –í—ñ—Ç–∞—é! –Ø –±–æ—Ç –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, —â–æ —á–µ–∫–∞—î –Ω–∞ –≤–∞—Å —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É.
                
                üé≤ –í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ —à–≤–∏–¥–∫–µ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑
                üìÖ –ê–±–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è —É –∑—Ä—É—á–Ω–∏–π –¥–ª—è –≤–∞—Å —á–∞—Å
                ‚öôÔ∏è –£ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –≤–∏ –º–æ–∂–µ—Ç–µ –∫–µ—Ä—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏
                
                ‚ÑπÔ∏è –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —â–æ–¥–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –Ω–∞ 09:00
                
                –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:""";

        messageSender.sendMessage(chatId, welcomeMessage,
                                  mainMenuButtonBuilder.build(mainMenuButtonService.getMainMenuButtons()));

    }

    @Override
    public String getCommandName() {
        return "/start";
    }

    @Override
    public String getDescription() {
        return "–ü–æ—á–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è. " +
                "–í–∏ –º–æ–∂–µ—Ç–µ –≤–∫–∞–∑–∞—Ç–∏ —á–∞—Å –¥–ª—è —â–æ–¥–µ–Ω–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å —É —Ñ–æ—Ä–º–∞—Ç—ñ /start HH:mm";
    }
} 