package com.ua.yushchenko.service.prediction;

import com.ua.yushchenko.service.user.UserService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Random;

/**
 * –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—É –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å.
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø–∞—Ç—Ç–µ—Ä–Ω Strategy –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å.
 */
@Service
@RequiredArgsConstructor
public class PredictionServiceImpl implements PredictionService {
    private final UserService userService;
    private final Random random = new Random();

    private static final List<String> QUICK_PREDICTIONS = List.of(
        "–°—å–æ–≥–æ–¥–Ω—ñ –±—É–¥–µ —á—É–¥–æ–≤–∏–π –¥–µ–Ω—å! üåü",
        "–ù–∞ –≤–∞—Å —á–µ–∫–∞—î –ø—Ä–∏—î–º–Ω–∏–π —Å—é—Ä–ø—Ä–∏–∑! üéÅ",
        "–í–∞—à—ñ –º—Ä—ñ—ó —Å–∫–æ—Ä–æ –∑–¥—ñ–π—Å–Ω—è—Ç—å—Å—è! ‚ú®",
        "–£–¥–∞—á–∞ –Ω–∞ –≤–∞—à–æ–º—É –±–æ—Ü—ñ! üçÄ",
        "–ü–æ–ø–µ—Ä–µ–¥—É –≤–∞–∂–ª–∏–≤—ñ –∑–º—ñ–Ω–∏! üîÑ",
        "–í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≥–∞—Ä–Ω—ñ –Ω–æ–≤–∏–Ω–∏! üì®",
        "–í–∞—Å —á–µ–∫–∞—î —Ü—ñ–∫–∞–≤–∞ –∑—É—Å—Ç—Ä—ñ—á! üë•",
        "–í–∞—à—ñ –∑—É—Å–∏–ª–ª—è –±—É–¥—É—Ç—å –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∂–µ–Ω—ñ! üèÜ",
        "–ù–∞—Å—Ç–∞–≤ —á–∞—Å –¥–ª—è –Ω–æ–≤–∏—Ö –ø–æ—á–∏–Ω–∞–Ω—å! üöÄ",
        "–í–∞—Å –æ—á—ñ–∫—É—î —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π —É—Å–ø—ñ—Ö! üí∞",
        "–í–∞—à–µ –±–∞–∂–∞–Ω–Ω—è –∑–¥—ñ–π—Å–Ω–∏—Ç—å—Å—è! üå†",
        "–ù–∞ –≤–∞—Å —á–µ–∫–∞—î –ø—Ä–∏—î–º–Ω–∞ –ø–æ–¥–æ—Ä–æ–∂! ‚úàÔ∏è"
    );

    private static final List<String> DAILY_PREDICTIONS = List.of(
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∞—à –¥–µ–Ω—å –±—É–¥–µ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π —Ä–∞–¥—ñ—Å—Ç—é —Ç–∞ —É—Å–ø—ñ—Ö–æ–º! üåû",
        "–î–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ –≤–∞–∂–ª–∏–≤—ñ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ç–∞ –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ! üéØ",
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –≤–∏—Ä—ñ—à–∏—Ç–∏ —Å–∫–ª–∞–¥–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è! üéä",
        "–î–µ–Ω—å –±—É–¥–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∏–º —Ç–∞ —É—Å–ø—ñ—à–Ω–∏–º! üìà",
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∞—Å —á–µ–∫–∞—î –ø—Ä–∏—î–º–Ω–∞ –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∫–∞! üéÅ",
        "–î–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ –≥–∞—Ä–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ –µ–º–æ—Ü—ñ—ó! üòä",
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –≤–∞–∂–ª–∏–≤–µ –ø–∏—Ç–∞–Ω–Ω—è! üîë",
        "–î–µ–Ω—å –±—É–¥–µ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π —Ü—ñ–∫–∞–≤–∏–º–∏ –∑—É—Å—Ç—Ä—ñ—á–∞–º–∏! üë•",
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∞—à—ñ –º—Ä—ñ—ó –ø–æ—á–Ω—É—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏—Å—è! ‚≠ê",
        "–î–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π —É—Å–ø—ñ—Ö —Ç–∞ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å! üí∞",
        "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –¥–æ—Å—è–≥—Ç–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ—ó –º–µ—Ç–∏! üéØ",
        "–î–µ–Ω—å –±—É–¥–µ —Å–ø–æ–≤–Ω–µ–Ω–∏–π –ª—é–±–æ–≤—ñ —Ç–∞ –≥–∞—Ä–º–æ–Ω—ñ—ó! ‚ù§Ô∏è"
    );

    @Override
    public String generateQuickPrediction(long chatId) {
        String prediction = QUICK_PREDICTIONS.get(random.nextInt(QUICK_PREDICTIONS.size()));
        userService.saveLastPrediction(chatId, prediction);
        return prediction;
    }

    @Override
    public String generateDailyPrediction(long chatId) {
        String prediction = DAILY_PREDICTIONS.get(random.nextInt(DAILY_PREDICTIONS.size()));
        userService.saveLastPrediction(chatId, prediction);
        return prediction;
    }

    @Override
    public void addPredictionStrategy(PredictionStrategy strategy) {
        // –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –ø–æ—Ç–æ—á–Ω—ñ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    }

    @Override
    public void removePredictionStrategy(PredictionStrategy strategy) {
        // –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –ø–æ—Ç–æ—á–Ω—ñ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    }
} 