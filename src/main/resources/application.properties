spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# Bot Configuration
bot.name=${BOT_NAME}
bot.token=${BOT_TOKEN}
bot.webhook-path=${WEBHOOK_PATH:/bot}
bot.webhook-url=${TELEGRAM_BOT_WEB_HOOK_URL}
server.ssl.enabled=false

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.initialization-fail-timeout=0

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Liquibase Configuration
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.ua.yushchenko=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

#quartz
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always

#Time Zone
prediction.time.zone=3

#OpenAI
openai.api.key=${OPENAI_API_KEY}

# Kafka broker
spring.kafka.bootstrap-servers=localhost:9092

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer config
spring.kafka.consumer.group-id=magic-ball-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

app.topics.magic-ball=magic-ball-requests